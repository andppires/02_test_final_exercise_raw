# Generated by Selenium IDE
import pytest
from time import sleep
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestDemo():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_demo(self):
    self.driver.get("https://tdd-detroid.onrender.com/")
    self.driver.set_window_size(970, 555)
   
    self.aguarda_elemento()
    self.adicionar_estudante()

    assert(
      "INFO Added student id: 1, Name: douglas"
      in self.driver.find_element(By.CSS_SELECTOR, ".py-p").text 
    )

    self.criar_curso("mat")

    assert(
       "INFO Added student id: 1, Name: douglas"
      in self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(2)").text
    )

    self.adiciona_estudante_curso()

    assert(
       "INFO Added student id: 1, Name: douglas"
      in self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(3)").text
    ) 
    
    self.adiciona_disciplina_curso()
       
    assert(
      "FAIL Necessários 3 cursos para se criar a primeira matéria"
      in self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(1)").text 
    )

    self.criar_curso("port")
    self.criar_curso("geo")

    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(5) > #course-btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(1)").click()
    
    assert(
      "INFO Added discipline id: 1, Name: mat, Course: 1"
       in self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(1)").text 
    )
    self.cria_disciplina(discipline="mat2")
    self.cria_disciplina(discipline="mat3")
    self.adicionar_estudante_disciplina()
        
    assert(
    "WARN Aluno deve se inscrever em 3 materias no minimo"
    in self.driver.find_element(By.CSS_SELECTOR, ".py-p:nth-child(1)").text 
    )
    self.se_inscreve_disciplina(iddisciplina="2")
    self.se_inscreve_disciplina(iddisciplina="3")
    self.cria_disciplina(discipline="mat4")
    self.se_inscreve_disciplina(iddisciplina="4")
    self.driver.close()

  def criar_curso(self, nome_curso):
    self.driver.find_element(By.ID, "course-nome").click()
    element = self.driver.find_element(By.ID, "course-nome")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.ID, "course-nome").send_keys(nome_curso)
    self.driver.find_element(By.ID, "course-btn").click()

  def se_inscreve_disciplina(self,iddisciplina):
      self.driver.find_element(By.ID, "subscribe-discipline-id").click()
      self.driver.find_element(By.ID, "subscribe-discipline-id").send_keys(iddisciplina)
      self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(6) > #course-btn").click()

  def cria_disciplina(self,discipline):
      self.driver.find_element(By.ID, "discipline-nome").click()
      element = self.driver.find_element(By.ID, "discipline-nome")
      actions = ActionChains(self.driver)
      actions.double_click(element).perform()
      self.driver.find_element(By.ID, "discipline-nome").send_keys(discipline)
      self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(5) > #course-btn").click()

  def adicionar_estudante_disciplina(self):
      self.driver.find_element(By.ID, "subscribe-student-id").click()
      self.driver.find_element(By.ID, "subscribe-student-id").send_keys("1")
      self.driver.find_element(By.ID, "subscribe-discipline-id").click()
      self.driver.find_element(By.ID, "subscribe-discipline-id").send_keys("1")
      self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(6) > #course-btn").click()

  def adiciona_disciplina_curso(self):
      self.driver.find_element(By.ID, "discipline-nome").click()
      self.driver.find_element(By.ID, "discipline-nome").send_keys("mat")
      self.driver.find_element(By.ID, "course-discipline-id").click()
      self.driver.find_element(By.ID, "course-discipline-id").send_keys("1")
      self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(5) > #course-btn").click()

  def adiciona_estudante_curso(self):
      self.driver.find_element(By.ID, "student-id").click()
      self.driver.find_element(By.ID, "student-id").send_keys("1")
      self.driver.find_element(By.ID, "course-id").click()
      self.driver.find_element(By.ID, "course-id").send_keys("1")
      self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(4) > #course-btn").click()

  def adicionar_estudante(self):
      self.driver.find_element(By.ID, "student-nome").click()
      self.driver.find_element(By.ID, "student-nome").send_keys("douglas")
      self.driver.find_element(By.ID, "student-btn").click()

  def aguarda_elemento(self):
      elements = self.driver.find_elements(By.CSS_SELECTOR, ".smooth")
      while len(elements) > 0:
        elements = self.driver.find_elements(By.CSS_SELECTOR, ".smooth")
        sleep(1)